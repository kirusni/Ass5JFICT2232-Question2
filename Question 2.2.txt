 private void btnCalcukate_Click(object sender, EventArgs e)
        {
            double radius;

            // Input validation
            if (string.IsNullOrWhiteSpace(txtRadius.Text))
            {
                MessageBox.Show("Please enter a value for the radius.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (!double.TryParse(txtRadius.Text, out radius))
            {
                MessageBox.Show("Only numeric values are allowed.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (radius <= 0)
            {
                MessageBox.Show("Radius must be a positive number greater than zero.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            // Area calculation
            double area = Math.PI * radius * radius;
            string result = "Radius = "+radius+", Area = "+area;
            lblResult.Text = "Area = " + area.ToString("F2");

            // Add result to history
            history.Add(result);
        }

        // Store history of calculations
        private List<string> history = new List<string>();


        private void btnHistory_Click_1(object sender, EventArgs e)
        {
            lstHistory.Items.Clear();

            if (history.Count == 0)
            {
                MessageBox.Show("No calculation history available.", "History", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            foreach (string item in history)
            {
                lstHistory.Items.Add(item);
            }
        }

        private void btnClear_Click_1(object sender, EventArgs e)
        {
            txtRadius.Clear();
            lblResult.Text = "";
        }